{"version":3,"file":"static/chunks/383.9c44b1003d074977.js","mappings":"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","sources":["webpack://_N_E/./utils/layout.ts","webpack://_N_E/./components/KVList.tsx","webpack://_N_E/./components/LayoutFlow.tsx","webpack://_N_E/./views/Home/trans.tsx","webpack://_N_E/./views/Home/index.tsx","webpack://_N_E/./views/Home/index.module.css","webpack://_N_E/<anon>"],"sourcesContent":["import Dagre from \"@dagrejs/dagre\";\n\nconst g = new Dagre.graphlib.Graph().setDefaultEdgeLabel(() => ({}));\n\nexport const getLayoutedElements = (\n  nodes: any[],\n  edges: any[],\n  options: { direction: any }\n) => {\n  g.setGraph({\n    rankdir: options.direction,\n  });\n\n  const els = document.querySelectorAll(\".kvlist-node\");\n\n  const elMap: any = Array.from(els).reduce((acc, el) => {\n    const id = el.id;\n\n    return { ...acc, [id]: el.clientHeight };\n  }, {});\n\n  edges.forEach(\n    (edge: {\n      source: Dagre.Edge;\n      target: string | { [key: string]: any } | undefined;\n    }) => g.setEdge(edge.source, edge.target)\n  );\n  nodes.forEach((node: any) =>\n    g.setNode(\n      node.id,\n      Object.assign(node, { width: 400, height: elMap[node.id] || 100 })\n    )\n  );\n\n  Dagre.layout(g);\n\n  return {\n    nodes: nodes.map((node: { id: string | Dagre.Label }) => {\n      const { x, y } = g.node(node.id);\n\n      return { ...node, position: { x, y } };\n    }),\n    edges,\n  };\n};\n","import { IconClose, IconDoubleChevronRight } from \"@douyinfe/semi-icons\";\nimport {\n  Button,\n  Card,\n  Descriptions,\n  Form,\n  List,\n  Popover,\n  Select,\n} from \"@douyinfe/semi-ui\";\nimport { FieldType } from \"@lark-base-open/js-sdk\";\nimport { useState } from \"react\";\nimport { Handle, Position } from \"reactflow\";\n\nexport function KVList(props: any) {\n  const [visible, setVisible] = useState(false);\n  const mapVal = formatValues(props.data.data);\n  return (\n    <div className=\"kvlist-node\" id={props.id}>\n      <Card\n        style={{ background: \"#fff\" }}\n        headerStyle={{ paddingTop: 15, paddingBottom: 15 }}\n        bodyStyle={{ paddingTop: 0, paddingBottom: 0 }}\n        title={\n          <h1>\n            <Handle\n              type=\"target\"\n              position={Position.Left}\n              style={{ top: 30 }}\n            />\n            <Popover\n              visible={visible}\n              showArrow\n              arrowPointAtCenter\n              rePosKey={Date.now()}\n              clickToHide\n              closeOnEsc\n              content={\n                <div>\n                  <IconClose size=\"small\" color=\"#666\" />\n                  <Descriptions\n                    size=\"small\"\n                    data={props.data.fields.map((item: any) => ({\n                      key: item.label,\n                      value: mapVal[item.id],\n                    }))}\n                  />\n                </div>\n              }\n              trigger=\"custom\"\n              position={\"rightTop\"}\n              spacing={10}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <span>{props.data.label}</span>\n                <Button\n                  style={{ marginLeft: \"10px\" }}\n                  size=\"small\"\n                  icon={<IconDoubleChevronRight />}\n                  onClick={() => setVisible(!visible)}\n                ></Button>\n              </div>\n            </Popover>\n          </h1>\n        }\n      >\n        <Form\n          labelPosition=\"left\"\n          labelAlign=\"right\"\n          initValues={mapVal}\n          onClickCapture={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          {props.data.fields\n            .filter(\n              (item: any) =>\n                item.type === FieldType.SingleLink ||\n                item.type === FieldType.DuplexLink\n            )\n            .map((item: any, i: number) => {\n              return (\n                <div key={item.id}>\n                  <Form.Input\n                    field={item.id}\n                    label={item.label}\n                    readonly\n                    trigger=\"blur\"\n                    style={{ width: 200 }}\n                  />\n                  {(item.type === FieldType.SingleLink ||\n                    item.type === FieldType.DuplexLink) && (\n                    <Handle\n                      id={item.id}\n                      type=\"source\"\n                      style={{ top: i * 56 + 52 + 29 }}\n                      position={Position.Right}\n                    />\n                  )}\n                </div>\n              );\n            })}\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nfunction mapCb(map: any, key: string, cb: any) {\n  return map?.[key]?.() ?? cb();\n}\n\nfunction formatValues(data: any[] = []) {\n  // const fieldMap = formatFieldsMap(fields);\n  const r = data.reduce((acc, c) => {\n    // const field = fieldMap[c.field];\n    // if (field.type === FieldType.Text) {\n    //   acc[c.field] = c.value?.[0]?.text;\n    // } else if (field.type === FieldType.MultiSelect) {\n    //   acc[c.field] = c.value?.map((item: any) => item.id) ?? [];\n    // } else if (field.type === FieldType.DateTime) {\n    //   acc[c.field] = c.value;\n    // } else {\n    //   const cell = c.value;\n    //   acc[c.field] =\n    //     typeof c === \"object\"\n    //       ? cell?.text ??\n    //         cell\n    //           ?.map?.((item: any) => item.text ?? item.name ?? item.label)\n    //           .join(\",\")\n    //       : cell;\n    // }\n    acc[c.field] = c.value;\n    return acc;\n  }, {});\n  // console.log({ r });\n\n  return r;\n}\n\nfunction formatFieldsMap(fields: any[] = []) {\n  return fields.reduce((acc, c) => {\n    acc[c.id] = c;\n    return acc;\n  }, {});\n}\n","import { Button, Toast } from \"@douyinfe/semi-ui\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport styles from \"./index.module.css\";\nimport { useTranslation } from \"next-i18next\";\n\nimport ReactFlow, {\n  Background,\n  BackgroundVariant,\n  ControlButton,\n  Controls,\n  MiniMap,\n  NodeResizer,\n  NodeToolbar,\n  ReactFlowProvider,\n  addEdge,\n  useEdgesState,\n  useNodesState,\n  useReactFlow,\n} from \"reactflow\";\n\nimport \"reactflow/dist/style.css\";\nimport { getLayoutedElements } from \"@/utils/layout\";\nimport { KVList } from \"./KVList\";\nimport { IconExpand, IconHelpCircle } from \"@douyinfe/semi-icons\";\n\nconst nodeTypes = {\n  kvlist: KVList,\n};\n\nexport const LayoutFlow = ({\n  initialNodes = [],\n  initialEdges = [],\n  fullscreen = false,\n}) => {\n  const { fitView } = useReactFlow();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  const onLayout = useCallback(() => {\n    const { nodes: layoutedNodes, edges: layoutedEdges } = getLayoutedElements(\n      nodes,\n      edges,\n      {\n        direction: \"LR\",\n      }\n    );\n\n    console.log(layoutedNodes, layoutedEdges);\n\n    setNodes([...(layoutedNodes as any)]);\n    setEdges([...layoutedEdges]);\n\n    window.requestAnimationFrame(() => {\n      fitView();\n    });\n  }, [nodes, edges]);\n\n  const onConnect = useCallback(\n    (params: any) => setEdges((eds: any) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  const onInit = useCallback(\n    (t: any) => {\n      onLayout();\n      setTimeout(() => {\n        t.fitView({ maxZoom: 0.9 });\n      });\n    },\n    [onLayout]\n  );\n\n  const expand = useCallback(() => {\n    const nw = open(\"/\", \"_block\");\n    if (nw) {\n      (nw as any).options = () => ({\n        initialEdges,\n        initialNodes,\n        fullscreen: true,\n      });\n    }\n  }, [initialEdges, initialNodes]);\n  const onMoveEnd = useCallback(() => {}, [onLayout]);\n  return (\n    <ReactFlow\n      nodeTypes={nodeTypes}\n      attributionPosition=\"bottom-left\"\n      nodes={nodes}\n      edges={edges}\n      onNodesChange={onNodesChange}\n      onEdgesChange={onEdgesChange}\n      onConnect={onConnect}\n      onInit={onInit}\n      minZoom={0.1}\n      onMoveEnd={onMoveEnd}\n    >\n      <Controls>\n        {!fullscreen && (\n          <ControlButton onClick={() => expand()}>\n            <IconExpand />\n          </ControlButton>\n        )}\n        <ControlButton\n          onClick={() => open(\"https://zhuanlan.zhihu.com/p/670722277\")}\n        >\n          <IconHelpCircle />\n        </ControlButton>\n      </Controls>\n      {fullscreen && <MiniMap />}\n      <NodeToolbar />\n      {/* <NodeResizer /> */}\n      <Background variant={BackgroundVariant.Dots} gap={12} size={1} />\n    </ReactFlow>\n  );\n};\n","import { FieldType } from \"@lark-base-open/js-sdk\";\n\nexport function trans(tables = []) {\n  const nodes = [];\n  const edges = [];\n  let isLoop = false;\n  for (let i = 0; i < tables.length; i++) {\n    const table = tables[i] as any;\n    const node = {\n      id: table.id,\n      type: \"kvlist\",\n      position: { x: 0, y: 0 },\n      data: {\n        start: i === 0,\n        end: i === tables.length - 1,\n        label: table.label,\n        fields: table.fields,\n        data: table.data,\n      },\n      // sourcePosition: \"right\",\n      // targetPosition: \"left\",\n    };\n    nodes.push(node);\n    for (let j = 0; j < table.fields.length; j++) {\n      const field = table.fields[j];\n      // const d = table.data[j];\n      if (\n        field.type === FieldType.SingleLink ||\n        field.type === FieldType.DuplexLink\n      ) {\n        // for (let i = 0; i < d.value.length; i++) {\n        const id = field.property.tableId; //d.value[i];\n        const edge = {\n          id: table.id + \"-\" + field.id + \"-\" + id,\n          sourceHandle: field.id,\n          source: table.id,\n          target: id,\n        };\n        // if (nodes[0].id === edge.target) {\n        //   isLoop = true;\n        //   edges.push({\n        //     id: \"root-ref-edge\" + edge.id + \"-\" + edge.source,\n        //     sourceHandle: edge.sourceHandle,\n        //     source: edge.source,\n        //     target: \"root-ref\",\n        //   });\n        // } else {\n        edges.push(edge);\n        // }\n        // }\n      }\n    }\n  }\n\n  // if (isLoop) {\n  //   nodes.push({\n  //     id: \"root-ref\",\n  //     type: \"output\",\n  //     position: { x: 0, y: 0 },\n  //     height: 200,\n  //     data: { label: `Ref<${nodes[0].data.label}>` },\n  //     targetPosition: \"left\",\n  //   });\n  // }\n\n  return [nodes, edges];\n}\n","import { Button, Empty, Spin, Toast } from \"@douyinfe/semi-ui\";\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport styles from \"./index.module.css\";\nimport { useTranslation } from \"next-i18next\";\nimport { Node, ReactFlowProvider } from \"reactflow\";\nimport { LayoutFlow } from \"@/components/LayoutFlow\";\nimport { trans } from \"./trans\";\n\nimport { FieldType, ITable, bitable } from \"@lark-base-open/js-sdk\";\nimport mitt from \"mitt\";\nimport {\n  IllustrationNoResult,\n  IllustrationNoResultDark,\n} from \"@douyinfe/semi-illustrations\";\n\nconst options = ((window as any)?.options?.() as any) || {};\n\n// const bs: { table?: ITable } = {};\nconst emitter = mitt();\n\nasync function fetchTables() {\n  // const table = await bitable.base.getActiveTable();\n  // bs.table = table;\n  // const fieldList = await table.getFieldList();\n  const tableList = await bitable.base.getTableList();\n  return await bsTableTrans(tableList);\n}\n\nif (!options.fullscreen) {\n  bitable.base.onSelectionChange(async (e) => {\n    emitter.emit(\"change-record\", e);\n    // console.log(record);\n  });\n}\n\nasync function bsTableTrans(bsTableList: ITable[]) {\n  const tables = [];\n\n  for (let i = 0; i < bsTableList.length; i++) {\n    const bsTable = bsTableList[i];\n    const name = await bsTable.getName();\n    const fields = await bsTable\n      .getFieldList()\n      .then((list) => Promise.all(list.map((item) => item.getMeta())));\n    const primary = fields.find((item) => item.isPrimary);\n    tables.push({\n      id: bsTable.id,\n      label: name,\n      primary: primary?.id,\n      meta: bsTable,\n      fields: fields.map((item) => ({\n        id: item.id,\n        label: item.name,\n        type: item.type,\n        property: item.property,\n        meta: item,\n      })),\n      data: fields.map((item) => ({\n        field: item.id,\n        value: FieldType[item.type],\n      })),\n    });\n  }\n\n  return tables;\n}\n\nasync function deepGet(recordId: any, tableId: any, dep: any = {}) {\n  if (dep[recordId + tableId]) {\n    return dep[recordId + tableId];\n  }\n  const table = await bitable.base.getTable(tableId);\n  const fields = await table.getFieldMetaList();\n  const record = await table.getRecordById(recordId);\n  const result: any = {\n    id: tableId,\n    recordId,\n    label: await table.getName(),\n    fields: fields.map((item) => ({\n      id: item.id,\n      label: item.name,\n      type: item.type,\n      property: item.property,\n      meta: item,\n    })),\n    data: [],\n  };\n\n  dep[recordId + tableId] = result;\n\n  result.data = await Promise.all(\n    fields.map(async (item) => {\n      const value = record.fields[item.id] as any;\n      return {\n        field: item.id,\n        value:\n          item.type === FieldType.SingleLink ||\n          item.type === FieldType.DuplexLink\n            ? await Promise.all(\n                value?.recordIds.map((rid: any) =>\n                  deepGet(rid, value.tableId, dep)\n                ) ?? []\n              )\n            : value,\n      };\n    })\n  );\n\n  return result;\n}\n\n/**\n * deep table => [nodes, edges]\n * @param table deepGet() return\n */\nfunction deepTrans(\n  table: any,\n  nodes: any = [],\n  edges: any = [],\n  nodeDep: any = {},\n  edgeDep: any = {}\n) {\n  const node = {\n    id: table.recordId,\n    type: \"kvlist\",\n    position: { x: 0, y: 0 },\n    data: {\n      start: false,\n      end: false,\n      label: table.label,\n      fields: table.fields,\n      data: table.data,\n    },\n  };\n  if (!nodeDep[node.id]) {\n    nodes.push(node);\n    nodeDep[node.id] = true;\n  }\n\n  for (let i = 0; i < table.fields.length; i++) {\n    const field = table.fields[i];\n    if (\n      field.type !== FieldType.SingleLink &&\n      field.type !== FieldType.DuplexLink\n    )\n      continue;\n    const value = table.data[i].value;\n    for (let i = 0; i < value.length; i++) {\n      const v = value[i];\n      const eid = table.recordId + \"-\" + v.recordId;\n      if (edgeDep[eid]) continue;\n      edgeDep[eid] = true;\n      edges.push({\n        id: eid,\n        sourceHandle: field.id,\n        source: table.recordId,\n        target: v.recordId,\n      } as any);\n      deepTrans(v, nodes, edges, nodeDep, edgeDep);\n    }\n  }\n\n  return [nodes, edges];\n}\n\nexport default function Home() {\n  const [t] = useTranslation();\n  const [graph, setGraph] = useState<any>({});\n  const [loading, setLoading] = useState(true);\n  const [deno, setDeno] = useState(false);\n  const [select, setSelect] = useState(true);\n  useEffect(() => {\n    if (options.fullscreen) {\n      setSelect(true);\n      setLoading(true);\n      setGraph(options);\n      setLoading(false);\n      setDeno(true);\n\n      return;\n    }\n    fetchTables().then((tables) => {\n      setLoading(true);\n      setDeno(false);\n      console.log({ tables });\n      const [initialNodes, initialEdges] = trans(tables as any);\n      console.log({ initialNodes, initialEdges });\n      setGraph({ initialNodes, initialEdges });\n      setDeno(true);\n      setTimeout(() => {\n        setLoading(false);\n      }, 100);\n    });\n\n    // emitter.on(\"change-record\", async (e: any) => {\n    //   // const tables = await p;\n\n    //   // console.log(tables);\n    //   setSelect(true);\n    //   setLoading(true);\n    //   console.log(e);\n    //   const t = await deepGet(e.data.recordId, e.data.tableId);\n    //   console.log(t);\n    //   const g = deepTrans(t);\n    //   console.log(g);\n    //   setGraph({ initialNodes: g[0], initialEdges: g[1] });\n    //   setLoading(false);\n    // });\n    return () => {\n      // emitter.off(\"change-record\");\n    };\n  }, []);\n  return (\n    <main\n      className={styles.main}\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {!select ? (\n        <Empty\n          image={<IllustrationNoResult style={{ width: 150, height: 150 }} />}\n          darkModeImage={\n            <IllustrationNoResultDark style={{ width: 150, height: 150 }} />\n          }\n          description={t(\"empty-tip\")}\n        />\n      ) : (\n        deno && (\n          <ReactFlowProvider>\n            <LayoutFlow {...graph} />\n          </ReactFlowProvider>\n        )\n      )}\n      {loading && (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100vh\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            background: \"#fff\",\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            zIndex: 100,\n          }}\n        >\n          <Spin size=\"large\"></Spin>\n        </div>\n      )}\n    </main>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__ElU3j\",\"h4\":\"Home_h4__4GCIr\",\"code\":\"Home_code__ESbU9\"};"],"names":["_window_options","window","g","Dagre","Graph","setDefaultEdgeLabel","getLayoutedElements","nodes","edges","options","setGraph","rankdir","direction","els","document","querySelectorAll","elMap","Array","from","reduce","acc","el","id","clientHeight","forEach","setEdge","edge","source","target","setNode","node","Object","assign","width","height","map","x","y","position","KVList","props","visible","setVisible","useState","mapVal","formatValues","data","jsx_runtime","jsx","div","className","Card","style","background","headerStyle","paddingTop","paddingBottom","bodyStyle","title","jsxs","h1","Handle","type","Position","Left","top","Popover","showArrow","arrowPointAtCenter","rePosKey","Date","now","clickToHide","closeOnEsc","content","IconClose","size","color","Descriptions","fields","key","item","label","value","trigger","spacing","display","justifyContent","alignItems","span","Button","marginLeft","icon","IconDoubleChevronRight","onClick","Form","labelPosition","labelAlign","initValues","onClickCapture","e","stopPropagation","filter","FieldType","SingleLink","DuplexLink","i","Input","field","readonly","Right","r","c","nodeTypes","kvlist","LayoutFlow","initialNodes","initialEdges","fullscreen","param","fitView","useReactFlow","setNodes","onNodesChange","useNodesState","setEdges","onEdgesChange","useEdgesState","onLayout","useCallback","layoutedNodes","layoutedEdges","console","log","requestAnimationFrame","onConnect","addEdge","params","eds","onInit","setTimeout","t","maxZoom","expand","nw","open","onMoveEnd","ReactFlow","attributionPosition","minZoom","Controls","ControlButton","IconExpand","IconHelpCircle","MiniMap","NodeToolbar","Background","variant","BackgroundVariant","Dots","gap","trans","tables","length","table","start","end","push","j","property","tableId","sourceHandle","_window","call","emitter","mitt","fetchTables","tableList","bitable","base","getTableList","bsTableTrans","bsTableList","bsTable","name","getName","getFieldList","then","Promise","all","list","getMeta","primary","find","isPrimary","meta","Home","useTranslation","graph","loading","setLoading","deno","setDeno","select","setSelect","useEffect","main","styles","ReactFlowProvider","Empty","image","IllustrationNoResult","darkModeImage","IllustrationNoResultDark","description","left","zIndex","Spin","onSelectionChange","emit","module","exports"],"sourceRoot":""}